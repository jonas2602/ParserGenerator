Avaliable Tokens:
[Index] [Name]
0 WS
1 BLOCKCOMMENT
2 LINECOMMENT
3 LEXERID
4 ARROW
5 QUESTIONMARK
6 CHARSET
7 STAR
8 PLUS
9 DOT
10 LITERAL
11 PARSERID
12 SEMICOLON
13 COLON
14 PIPE
15 RIGHTPARENTHESE
16 LEFTPARENTHESE

Avaliable Non Terminals:
[Index] [Name]
0 action
1 anytime
2 lexerconst
3 lexeror
4 lexeror2
5 lexerrule
6 once
7 operator
8 operator2
9 optional
10 parserconst
11 parserlist
12 parseror
13 parseror2
14 parserrule
15 regex
16 rulelist

Table Entries:
([NonTerminal], [Token]) -> [Rule]
[action(0), ARROW(4)] -> 0 ARROW PARSERID
[action(0), SEMICOLON(12)] -> 1 EPSILON
[anytime(1), STAR(7)] -> 0 STAR
[lexerconst(2), LEXERID(3)] -> 1 LEXERID
[lexerconst(2), CHARSET(6)] -> 3 CHARSET
[lexerconst(2), DOT(9)] -> 2 DOT
[lexerconst(2), LITERAL(10)] -> 4 LITERAL
[lexerconst(2), LEFTPARENTHESE(16)] -> 0 LEFTPARENTHESE regex RIGHTPARENTHESE
[lexeror(3), LEXERID(3)] -> 0 operator lexeror2
[lexeror(3), CHARSET(6)] -> 0 operator lexeror2
[lexeror(3), DOT(9)] -> 0 operator lexeror2
[lexeror(3), LITERAL(10)] -> 0 operator lexeror2
[lexeror(3), LEFTPARENTHESE(16)] -> 0 operator lexeror2
[lexeror2(4), LEXERID(3)] -> 1 EPSILON
[lexeror2(4), ARROW(4)] -> 1 EPSILON
[lexeror2(4), CHARSET(6)] -> 1 EPSILON
[lexeror2(4), DOT(9)] -> 1 EPSILON
[lexeror2(4), LITERAL(10)] -> 1 EPSILON
[lexeror2(4), SEMICOLON(12)] -> 1 EPSILON
[lexeror2(4), PIPE(14)] -> 0 PIPE operator lexeror2
[lexeror2(4), RIGHTPARENTHESE(15)] -> 1 EPSILON
[lexeror2(4), LEFTPARENTHESE(16)] -> 1 EPSILON
[lexerrule(5), LEXERID(3)] -> 0 LEXERID COLON regex action SEMICOLON
[once(6), PLUS(8)] -> 0 PLUS
[operator(7), LEXERID(3)] -> 0 lexerconst operator2
[operator(7), CHARSET(6)] -> 0 lexerconst operator2
[operator(7), DOT(9)] -> 0 lexerconst operator2
[operator(7), LITERAL(10)] -> 0 lexerconst operator2
[operator(7), LEFTPARENTHESE(16)] -> 0 lexerconst operator2
[operator2(8), LEXERID(3)] -> 3 EPSILON
[operator2(8), ARROW(4)] -> 3 EPSILON
[operator2(8), QUESTIONMARK(5)] -> 2 optional
[operator2(8), CHARSET(6)] -> 3 EPSILON
[operator2(8), STAR(7)] -> 0 anytime
[operator2(8), PLUS(8)] -> 1 once
[operator2(8), DOT(9)] -> 3 EPSILON
[operator2(8), LITERAL(10)] -> 3 EPSILON
[operator2(8), SEMICOLON(12)] -> 3 EPSILON
[operator2(8), PIPE(14)] -> 3 EPSILON
[operator2(8), RIGHTPARENTHESE(15)] -> 3 EPSILON
[operator2(8), LEFTPARENTHESE(16)] -> 3 EPSILON
[optional(9), QUESTIONMARK(5)] -> 0 QUESTIONMARK
[parserconst(10), LEXERID(3)] -> 0 LEXERID
[parserconst(10), LITERAL(10)] -> 2 LITERAL
[parserconst(10), PARSERID(11)] -> 1 PARSERID
[parserconst(10), LEFTPARENTHESE(16)] -> 3 LEFTPARENTHESE parseror RIGHTPARENTHESE
[parserlist(11), LEXERID(3)] -> 0 parserconst parserlist
[parserlist(11), LITERAL(10)] -> 0 parserconst parserlist
[parserlist(11), PARSERID(11)] -> 0 parserconst parserlist
[parserlist(11), SEMICOLON(12)] -> 1 EPSILON
[parserlist(11), PIPE(14)] -> 1 EPSILON
[parserlist(11), RIGHTPARENTHESE(15)] -> 1 EPSILON
[parserlist(11), LEFTPARENTHESE(16)] -> 0 parserconst parserlist
[parseror(12), LEXERID(3)] -> 0 parserlist parseror2
[parseror(12), LITERAL(10)] -> 0 parserlist parseror2
[parseror(12), PARSERID(11)] -> 0 parserlist parseror2
[parseror(12), SEMICOLON(12)] -> 0 parserlist parseror2
[parseror(12), PIPE(14)] -> 0 parserlist parseror2
[parseror(12), RIGHTPARENTHESE(15)] -> 0 parserlist parseror2
[parseror(12), LEFTPARENTHESE(16)] -> 0 parserlist parseror2
[parseror2(13), SEMICOLON(12)] -> 1 EPSILON
[parseror2(13), PIPE(14)] -> 0 PIPE parserlist parseror2
[parseror2(13), RIGHTPARENTHESE(15)] -> 1 EPSILON
[parserrule(14), PARSERID(11)] -> 0 PARSERID COLON parseror SEMICOLON
[regex(15), LEXERID(3)] -> 0 lexeror regex
[regex(15), ARROW(4)] -> 1 EPSILON
[regex(15), CHARSET(6)] -> 0 lexeror regex
[regex(15), DOT(9)] -> 0 lexeror regex
[regex(15), LITERAL(10)] -> 0 lexeror regex
[regex(15), SEMICOLON(12)] -> 1 EPSILON
[regex(15), RIGHTPARENTHESE(15)] -> 1 EPSILON
[regex(15), LEFTPARENTHESE(16)] -> 0 lexeror regex
[rulelist(16), EOF(-1)] -> 2 EOF
[rulelist(16), LEXERID(3)] -> 1 lexerrule rulelist
[rulelist(16), PARSERID(11)] -> 0 parserrule rulelist

Rules:
[LocalRuleIndex] [NonTerminal] -> [Element] [Element] ...
0 action(0) -> ARROW(4) PARSERID(11)
1 action(0) -> EPSILON(-1)
0 anytime(1) -> STAR(7)
0 lexerconst(2) -> LEFTPARENTHESE(16) regex(15) RIGHTPARENTHESE(15)
1 lexerconst(2) -> LEXERID(3)
2 lexerconst(2) -> DOT(9)
3 lexerconst(2) -> CHARSET(6)
4 lexerconst(2) -> LITERAL(10)
0 lexeror(3) -> operator(7) lexeror2(4)
0 lexeror2(4) -> PIPE(14) operator(7) lexeror2(4)
1 lexeror2(4) -> EPSILON(-1)
0 lexerrule(5) -> LEXERID(3) COLON(13) regex(15) action(0) SEMICOLON(12)
0 once(6) -> PLUS(8)
0 operator(7) -> lexerconst(2) operator2(8)
0 operator2(8) -> anytime(1)
1 operator2(8) -> once(6)
2 operator2(8) -> optional(9)
3 operator2(8) -> EPSILON(-1)
0 optional(9) -> QUESTIONMARK(5)
0 parserconst(10) -> LEXERID(3)
1 parserconst(10) -> PARSERID(11)
2 parserconst(10) -> LITERAL(10)
3 parserconst(10) -> LEFTPARENTHESE(16) parseror(12) RIGHTPARENTHESE(15)
0 parserlist(11) -> parserconst(10) parserlist(11)
1 parserlist(11) -> EPSILON(-1)
0 parseror(12) -> parserlist(11) parseror2(13)
0 parseror2(13) -> PIPE(14) parserlist(11) parseror2(13)
1 parseror2(13) -> EPSILON(-1)
0 parserrule(14) -> PARSERID(11) COLON(13) parseror(12) SEMICOLON(12)
0 regex(15) -> lexeror(3) regex(15)
1 regex(15) -> EPSILON(-1)
0 rulelist(16) -> parserrule(14) rulelist(16)
1 rulelist(16) -> lexerrule(5) rulelist(16)
2 rulelist(16) -> EOF(-1)
